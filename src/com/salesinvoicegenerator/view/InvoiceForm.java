/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.salesinvoicegenerator.view;

import com.salesinvoicegenerator.controller.ActionHandler;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class InvoiceForm extends javax.swing.JFrame implements ActionListener   {

    /**
     * Creates new form InvoiceForm
     * @param e
     */
    
    
    
       public SimpleDateFormat df= new SimpleDateFormat("dd-mm-yyyy");

    @Override
    public void actionPerformed(ActionEvent e) {
    
        
    }
    public InvoiceForm() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        NumTxtField = new javax.swing.JTextField();
        CustomerNametxtfield = new javax.swing.JTextField();
        DialogSaveBtn = new javax.swing.JButton();
        DialogSaveBtn.addActionListener(handler);
        DialogCancel = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDialog2 = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        itemTxtField = new javax.swing.JTextField();
        priceTxt = new javax.swing.JTextField();
        CountTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoiceHeaderTable = new javax.swing.JTable();
        createInvoicebtn = new javax.swing.JButton();
        createInvoicebtn.addActionListener(handler);

        deleteInvoiceBtn = new javax.swing.JButton();
        deleteInvoiceBtn.addActionListener(handler);
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        invNumLbl = new javax.swing.JLabel();
        invDateLbl = new javax.swing.JLabel();
        customerNameLbl = new javax.swing.JLabel();
        invTotalLbl = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        invoiceLineTable = new javax.swing.JTable();
        newItemBtn = new javax.swing.JButton();
        newItemBtn.addActionListener(handler);
        deleteItemBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        loadFiles = new javax.swing.JMenuItem();
        loadFiles.addActionListener(handler);
        saveFiles = new javax.swing.JMenuItem();
        saveFiles.addActionListener(handler);
        jMenuItem1 = new javax.swing.JMenuItem();

        jDialog1.setName("Create New Invoice"); // NOI18N

        jLabel6.setText("No.   :");

        jLabel7.setText("Customer Name :");

        jLabel8.setText("Date : ");

        NumTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumTxtFieldActionPerformed(evt);
            }
        });

        DialogSaveBtn.setMnemonic('x');
        DialogSaveBtn.setText("Save");
        DialogSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DialogSaveBtnActionPerformed(evt);
            }
        });
        DialogSaveBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DialogSaveBtnKeyPressed(evt);
            }
        });

        DialogCancel.setText("Cancel");
        DialogCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DialogCancelActionPerformed(evt);
            }
        });

        jDateChooser1.setDateFormatString("dd-MM-yyyy");
        jDateChooser1.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(CustomerNametxtfield, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                    .addComponent(NumTxtField)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE))
                .addGap(40, 40, 40))
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(DialogSaveBtn)
                .addGap(58, 58, 58)
                .addComponent(DialogCancel)
                .addContainerGap())
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(NumTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(CustomerNametxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DialogSaveBtn)
                    .addComponent(DialogCancel))
                .addGap(53, 53, 53))
        );

        jLabel5.setText("Item Name");

        jLabel9.setText("Item Price");

        jLabel10.setText("Items Count");

        itemTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemTxtFieldActionPerformed(evt);
            }
        });

        priceTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTxtActionPerformed(evt);
            }
        });

        jButton1.setText("Add Items");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(24, 24, 24)
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(74, 74, 74)
                .addComponent(jButton2)
                .addGap(23, 23, 23))
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(itemTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(priceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(CountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(35, 35, 35))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        invoiceHeaderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Date", "Customer"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        invoiceHeaderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invoiceHeaderTableMouseClick(evt);
            }
        });
        jScrollPane1.setViewportView(invoiceHeaderTable);

        createInvoicebtn.setText("Create New Invoice");
        createInvoicebtn.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                createInvoicebtnComponentAdded(evt);
            }
        });
        createInvoicebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createInvoicebtnMouseClicked(evt);
            }
        });
        createInvoicebtn.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                createInvoicebtnComponentShown(evt);
            }
        });
        createInvoicebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createInvoicebtnActionPerformed(evt);
            }
        });

        deleteInvoiceBtn.setText("Delete Invoice");
        deleteInvoiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteInvoiceBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Invoice Num ");

        jLabel2.setText("Invoice Date ");

        jLabel3.setText("Customer Name");

        jLabel4.setText("Invoice Total");

        invDateLbl.setToolTipText("");

        invoiceLineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Item Name", "Item Price", "Count", "Item Totall"
            }
        ));
        jScrollPane2.setViewportView(invoiceLineTable);

        newItemBtn.setText("Add Item");
        newItemBtn.setToolTipText("");
        newItemBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newItemBtnMouseClicked(evt);
            }
        });
        newItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newItemBtnActionPerformed(evt);
            }
        });

        deleteItemBtn.setText("Cancel");
        deleteItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemBtnActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        loadFiles.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_MASK));
        loadFiles.setMnemonic('l');
        loadFiles.setText("Load Files");
        loadFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadFilesActionPerformed(evt);
            }
        });
        jMenu1.add(loadFiles);

        saveFiles.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        saveFiles.setMnemonic('s');
        saveFiles.setText("Save Files");
        saveFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFilesActionPerformed(evt);
            }
        });
        jMenu1.add(saveFiles);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setMnemonic('e');
        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(createInvoicebtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteInvoiceBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newItemBtn)
                .addGap(38, 38, 38)
                .addComponent(deleteItemBtn)
                .addGap(119, 119, 119))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(invTotalLbl)
                            .addComponent(invNumLbl)
                            .addComponent(invDateLbl)
                            .addComponent(customerNameLbl))))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(invNumLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(invDateLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(customerNameLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(invTotalLbl))
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createInvoicebtn)
                    .addComponent(deleteInvoiceBtn)
                    .addComponent(newItemBtn)
                    .addComponent(deleteItemBtn))
                .addGap(159, 159, 159))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteInvoiceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteInvoiceBtnActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel DFT=(DefaultTableModel)invoiceHeaderTable.getModel();
        
        if(invoiceHeaderTable.getSelectedRowCount()==1){
        DFT.removeRow(invoiceHeaderTable.getSelectedRow());
        
        }else{
        if(invoiceHeaderTable.getRowCount()==0){
                            JOptionPane.showMessageDialog(this,"Table is Empty!");

            

   
        }else{
                            JOptionPane.showMessageDialog(this, "Please Select One Invoice For Delete ");


        }
            
        
        
        
        }
           

    }//GEN-LAST:event_deleteInvoiceBtnActionPerformed

    private void newItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newItemBtnActionPerformed

        // TODO add your handling code here:
        
        
        
        
        
        
        
    }//GEN-LAST:event_newItemBtnActionPerformed

    private void createInvoicebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createInvoicebtnActionPerformed
        
       
       
  
    }//GEN-LAST:event_createInvoicebtnActionPerformed

    private void deleteItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemBtnActionPerformed
        // TODO add your handling code here
            
        DefaultTableModel DFT=(DefaultTableModel)invoiceLineTable.getModel();
        
        if(invoiceLineTable.getSelectedRowCount()==1){
        DFT.removeRow(invoiceLineTable.getSelectedRow());
        
        }else{
        if(invoiceLineTable.getRowCount()==0){
                            JOptionPane.showMessageDialog(this,"Table is Empty!");

            

   
        }else{
                            JOptionPane.showMessageDialog(this, "Please Select One Item For Delete ");


        }
            
        
        
        
        }
        
        
    }//GEN-LAST:event_deleteItemBtnActionPerformed

    private void createInvoicebtnComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_createInvoicebtnComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_createInvoicebtnComponentAdded

    private void loadFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFilesActionPerformed
        // TODO add your handling code here:
        
        loadFiles.setAccelerator(KeyStroke.getKeyStroke('l', KeyEvent.ALT_DOWN_MASK));
        
        
        
       JOptionPane.showMessageDialog(this, " please select Invoice header",
                " Invoice Header", JOptionPane.WARNING_MESSAGE);
      
       
       JFileChooser fileChooser= new JFileChooser();
       int btnClick=fileChooser.showOpenDialog(this);
       
       
       if (btnClick==JFileChooser.APPROVE_OPTION){
        String path=   fileChooser.getSelectedFile().getPath();
        File selectedFile=new File(path);
            try {
                FileReader fr=new FileReader(selectedFile);
                BufferedReader br=new BufferedReader(fr);
                DefaultTableModel model=(DefaultTableModel)invoiceHeaderTable.getModel();
                Object[]lines=br.lines().toArray();
                for(int i=0;i<lines.length;i++){
                    
                String[]row=lines[i].toString().split(",");
                model.addRow(row);
                
                
                        }   
            } catch (FileNotFoundException ex) {
                Logger.getLogger(InvoiceForm.class.getName()).log(Level.SEVERE, null, ex);
            }
   
      } 
       
       
        JOptionPane.showMessageDialog(this, " please select Line header ",
                " Line Header", JOptionPane.WARNING_MESSAGE);
       JFileChooser fileChooserLine= new JFileChooser();
       int btnClick2=fileChooserLine.showOpenDialog(this);
       
       
       if (btnClick2==JFileChooser.APPROVE_OPTION){
        String path2=   fileChooserLine.getSelectedFile().getPath();
        File selectedFile2=new File(path2);
            try {
                FileReader fr2=new FileReader(selectedFile2);
                BufferedReader br2=new BufferedReader(fr2);
                DefaultTableModel model=(DefaultTableModel)invoiceLineTable.getModel();
                Object[]lines=br2.lines().toArray();
                for(int i=0;i<lines.length;i++){
                    
                String[]row=lines[i].toString().split(",");
                model.addRow(row);
                
                
                        }   
            } catch (FileNotFoundException ex) {
                Logger.getLogger(InvoiceForm.class.getName()).log(Level.SEVERE, null, ex);
            }
   
      } 

       
       
       
       
         JFileChooser filechooser=new JFileChooser();
         
         File selectedFile=new File("InvoiceHeader.csv");
        try {
            selectedFile.createNewFile();
        } catch (IOException ex) {
            Logger.getLogger(InvoiceForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            FileReader fr2=new FileReader(selectedFile);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "File Not Found","Invoice Line ", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        
         JFileChooser filechooser2=new JFileChooser();
         
         File selectedFile2=new File("InvoiceLine.csv");
        try {
            selectedFile2.createNewFile();
        } catch (IOException ex) {
            Logger.getLogger(InvoiceForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            FileReader fr2=new FileReader(selectedFile);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "File Not Found","Invoice Line ", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();}
         
         
       
         
         
         
         
         
         
         
         
         
         
    }//GEN-LAST:event_loadFilesActionPerformed

    private void saveFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFilesActionPerformed
        // TODO add your handling code here:
        saveFiles.setAccelerator(KeyStroke.getKeyStroke('s', KeyEvent.ALT_DOWN_MASK));
        
        
       JFileChooser fileChooser=new JFileChooser();
        fileChooser.setDialogTitle("specify a file save");
        int userSelection =fileChooser.showSaveDialog(this);
        if(userSelection==JFileChooser.APPROVE_OPTION){
        File fileTosave= fileChooser.getSelectedFile();
        
        
        
            try {
                FileWriter fw = new FileWriter(fileTosave);
                BufferedWriter bw=new BufferedWriter(fw);
                for (int i=0;i<invoiceHeaderTable.getRowCount();i++){
                    
                for (int j=0;j<invoiceHeaderTable.getColumnCount();j++){
                bw.write(invoiceHeaderTable.getValueAt(i,j).toString()+",");
                  
                }
                bw.newLine();
                JOptionPane.showMessageDialog(this,"File has been saved Successfully ","Information message",JOptionPane.INFORMATION_MESSAGE);
                

                
                }
                bw.close();
                fw.close();

            } catch (IOException ex) {
                
                
                JOptionPane.showMessageDialog(this,"Error","Error Message",JOptionPane.ERROR_MESSAGE);
               // Logger.getLogger(InvoiceForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        JFileChooser fileChooser22=new JFileChooser();
        fileChooser22.setDialogTitle("specify a file save");
        int userSelection2 =fileChooser22.showSaveDialog(this);
        if(userSelection2==JFileChooser.APPROVE_OPTION){
        File fileTosave2= fileChooser22.getSelectedFile();
        
        
        
            try {
                FileWriter fw22 = new FileWriter(fileTosave2);
                BufferedWriter bw22=new BufferedWriter(fw22);
                for (int i=0;i<invoiceLineTable.getRowCount();i++){
                    
                for (int j=0;j<invoiceLineTable.getColumnCount();j++){
                bw22.write(invoiceLineTable.getValueAt(i,j).toString()+",");
                  
                }
                bw22.newLine();
                JOptionPane.showMessageDialog(this,"File has been saved Successfully ","Information message",JOptionPane.INFORMATION_MESSAGE);
                

                
                }
                bw22.close();
                fw22.close();

            } catch (IOException ex) {
                
                JOptionPane.showMessageDialog(this,"Error","Error Message",JOptionPane.ERROR_MESSAGE);
               // Logger.getLogger(InvoiceForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        }
        
              
      
        
        
    }//GEN-LAST:event_saveFilesActionPerformed

    private void createInvoicebtnComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_createInvoicebtnComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_createInvoicebtnComponentShown

    private void createInvoicebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createInvoicebtnMouseClicked
        // TODO add your handling code here:
        
        jDialog1.setVisible(true);
       jDialog1.setSize(450, 300);
       jDialog1.setLocation(50, 50);
    }//GEN-LAST:event_createInvoicebtnMouseClicked

    private void NumTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumTxtFieldActionPerformed

    
    
    private void DialogSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DialogSaveBtnActionPerformed
        // TODO add your handling code here:
                String invoiceDate=((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText();

        if (NumTxtField.getText().equals("")||CustomerNametxtfield.getText().equals("")||invoiceDate.equals("")){
            JOptionPane.showMessageDialog(this, "Please Enter All Data ");
        }else{
            String newInvoice[]={NumTxtField.getText(),
                invoiceDate,
                CustomerNametxtfield.getText()
            };
            DefaultTableModel tblInsert=(DefaultTableModel)  invoiceHeaderTable.getModel();
            tblInsert.addRow(newInvoice);
            
            JOptionPane.showMessageDialog(this, "A new Invoice has been created Successfully");
            
            NumTxtField.setText("");
            CustomerNametxtfield.setText("");
            
        
        jDialog1.setVisible(false);

        
        
        }
            
            
        
        
        
        
    }//GEN-LAST:event_DialogSaveBtnActionPerformed

    private void DialogCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DialogCancelActionPerformed
        // TODO add your handling code here:
        NumTxtField.setText("");
            CustomerNametxtfield.setText("");
        jDialog1.setVisible(false);
        
    
    }//GEN-LAST:event_DialogCancelActionPerformed

    private void invoiceHeaderTableMouseClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoiceHeaderTableMouseClick
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel)invoiceHeaderTable.getModel();
        int selectedRowIndex=invoiceHeaderTable.getSelectedRow();
        
        invNumLbl.setText(model.getValueAt(selectedRowIndex, 0).toString());
        invDateLbl.setText(model.getValueAt(selectedRowIndex, 2).toString());
        customerNameLbl.setText(model.getValueAt(selectedRowIndex, 0).toString());
        /*
        String numlabeltext=invNumLbl.getText();
        String newitem[]={numlabeltext,
            itemTxtField.getText(),
            CountTxt.getText()
              };
        DefaultTableModel tbl=(DefaultTableModel)invoiceLineTable.getModel();
        tbl.addRow(newitem);
        
        */
/*
        String numlabeltext=invNumLbl.getText();

        if (itemTxtField.getText().equals("")||priceTxt.getText().equals("")||CountTxt.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please Enter All Data ");
            }else{
            String newItem[]={numlabeltext,
                itemTxtField.getText(),
                priceTxt.getText(),
                CountTxt.getText(),
            };
            DefaultTableModel tblInsert=(DefaultTableModel)  invoiceLineTable.getModel();
            tblInsert.addRow(newItem);
            
            JOptionPane.showMessageDialog(this, "A new Item has been created Successfully");
            
            itemTxtField.setText("");
            priceTxt.setText("");
            CountTxt.setText("");
            
        
        jDialog2.setVisible(false);
        */

        
        
    }//GEN-LAST:event_invoiceHeaderTableMouseClick

    private void DialogSaveBtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DialogSaveBtnKeyPressed
        // TODO add your handling code here:
        String invoiceDate=((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText();
    
         if (NumTxtField.getText().equals("")||CustomerNametxtfield.getText().equals("")||invoiceDate.equals("")){
            JOptionPane.showMessageDialog(this, "Please Enter All Data ");
        }else{
            String newInvoice[]={NumTxtField.getText(),
                CustomerNametxtfield.getText(),invoiceDate
            };
            DefaultTableModel tblInsert=(DefaultTableModel)  invoiceHeaderTable.getModel();
            tblInsert.addRow(newInvoice);
            
            JOptionPane.showMessageDialog(this, "A new Invoice has been created Successfully");
            
            NumTxtField.setText("");
            CustomerNametxtfield.setText("");
           
            
        
        jDialog1.setVisible(false);
         
         
         }
        
        
        

    }//GEN-LAST:event_DialogSaveBtnKeyPressed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:.
        //setDefaultCloseOperation(EXIT_ON_CLOSE);
        System.exit(0);
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void newItemBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newItemBtnMouseClicked
        // TODO add your handling code here:
          // String numlabeltext=invNumLbl.getText();

        
      if(invNumLbl.getText().equals("")){
          JOptionPane.showMessageDialog(this,"Please Select Invoice");
      }else{
       jDialog2.setVisible(true);
       jDialog2.setSize(450, 400);
       jDialog2.setLocation(350, 150);
      }
    }//GEN-LAST:event_newItemBtnMouseClicked

    private void itemTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemTxtFieldActionPerformed

    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
      /*   DefaultTableModel model=(DefaultTableModel)invoiceHeaderTable.getModel();
        int selectedRowIndex=invoiceHeaderTable.getSelectedRow();
        
     String headerno=invoiceHeaderTable.getValueAt(selectedRowIndex, 0).toString();
     invnumblbl*/
              
   //String headerNumber=invoiceTable.getValueAt(selectedRowIndex, 0).toString();
        //numlabel.setText(headerNumber);
        int a= Integer.parseInt(priceTxt.getText());
        int b=Integer.parseInt(CountTxt.getText());
        double itemtotal=a*b;
        
        
        String numlabeltext=invNumLbl.getText();

        if (itemTxtField.getText().equals("")||priceTxt.getText().equals("")||CountTxt.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please Enter All Data ");
            }else{
            String newItem[]={numlabeltext,
                itemTxtField.getText(),
                priceTxt.getText(),
                CountTxt.getText(),
                String.valueOf(itemtotal)
             };
            DefaultTableModel tblInsert=(DefaultTableModel)  invoiceLineTable.getModel();
            tblInsert.addRow(newItem);
            
            JOptionPane.showMessageDialog(this, "A new Item has been created Successfully");
           
            
            itemTxtField.setText("");
            priceTxt.setText("");
            CountTxt.setText("");
            
        
        jDialog2.setVisible(false);
        
        
        //total of column
        
         double sum=0;
        for (int i=0;i<invoiceLineTable.getRowCount();i++){
            double val=Double.valueOf(invoiceLineTable.getValueAt(i, 4).toString());
            sum+=val;
            
        
       // sum= sum + Integer.parseInt(invoiceLineTable.getValueAt(i, 4).toString());
        }
        invTotalLbl.setText(Double.toString(sum));
     
        
        
        
        
  
        
        
            
        
        
        
        
        }   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        itemTxtField.setText("");
        priceTxt.setText("");
        CountTxt.setText("");
        jDialog2.setVisible(false);
    }//GEN-LAST:event_jButton2MouseClicked

    private void priceTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTxtActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
               // JOptionPane.showMessageDialog(null, "A basic JOptionPane message dialog");

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InvoiceForm().setVisible(true);
            }
        });
    }

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CountTxt;
    private javax.swing.JTextField CustomerNametxtfield;
    private javax.swing.JButton DialogCancel;
    private javax.swing.JButton DialogSaveBtn;
    private javax.swing.JTextField NumTxtField;
    private javax.swing.JButton createInvoicebtn;
    private javax.swing.JLabel customerNameLbl;
    private javax.swing.JButton deleteInvoiceBtn;
    private javax.swing.JButton deleteItemBtn;
    private javax.swing.JLabel invDateLbl;
    private javax.swing.JLabel invNumLbl;
    private javax.swing.JLabel invTotalLbl;
    private javax.swing.JTable invoiceHeaderTable;
    private javax.swing.JTable invoiceLineTable;
    private javax.swing.JTextField itemTxtField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem loadFiles;
    private javax.swing.JButton newItemBtn;
    private javax.swing.JTextField priceTxt;
    private javax.swing.JMenuItem saveFiles;
    // End of variables declaration//GEN-END:variables
 private ActionHandler handler =new ActionHandler();


}